{"ast":null,"code":"const API_URL = \"http://localhost:5000/api/notifications\";\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\nexport async function fetchNotifications() {\n  const res = await fetch(API_URL, {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch notifications\");\n  return res.json();\n}\nexport async function addNotification(notification) {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(notification)\n  });\n  if (!res.ok) throw new Error(\"Failed to add notification\");\n  return res.json();\n}\nexport async function updateNotification(id, notification) {\n  const res = await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(notification)\n  });\n  if (!res.ok) throw new Error(\"Failed to update notification\");\n  return res.json();\n}\nexport async function deleteNotification(id) {\n  const res = await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete notification\");\n  return res.json();\n}","map":{"version":3,"names":["API_URL","getToken","localStorage","getItem","fetchNotifications","res","fetch","headers","Authorization","ok","Error","json","addNotification","notification","method","body","JSON","stringify","updateNotification","id","deleteNotification"],"sources":["C:/Users/sm/Desktop/smartshiksha22/smartshiksha/SMARTSHIKSHA/src/services/notificationApi.js"],"sourcesContent":["const API_URL = \"http://localhost:5000/api/notifications\";\n\nfunction getToken() {\n  return localStorage.getItem(\"token\");\n}\n\nexport async function fetchNotifications() {\n  const res = await fetch(API_URL, {\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch notifications\");\n  return res.json();\n}\n\nexport async function addNotification(notification) {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(notification)\n  });\n  if (!res.ok) throw new Error(\"Failed to add notification\");\n  return res.json();\n}\n\nexport async function updateNotification(id, notification) {\n  const res = await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: JSON.stringify(notification)\n  });\n  if (!res.ok) throw new Error(\"Failed to update notification\");\n  return res.json();\n}\n\nexport async function deleteNotification(id) {\n  const res = await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\",\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete notification\");\n  return res.json();\n} "],"mappings":"AAAA,MAAMA,OAAO,GAAG,yCAAyC;AAEzD,SAASC,QAAQA,CAAA,EAAG;EAClB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC;AAEA,OAAO,eAAeC,kBAAkBA,CAAA,EAAG;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,OAAO,EAAE;IAC/BO,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;IAAG;EACnD,CAAC,CAAC;EACF,IAAI,CAACI,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,eAAeA,CAACC,YAAY,EAAE;EAClD,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAACN,OAAO,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdP,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;IACrC,CAAC;IACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,YAAY;EACnC,CAAC,CAAC;EACF,IAAI,CAACR,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC1D,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeO,kBAAkBA,CAACC,EAAE,EAAEN,YAAY,EAAE;EACzD,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,IAAImB,EAAE,EAAE,EAAE;IAC1CL,MAAM,EAAE,KAAK;IACbP,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;IACrC,CAAC;IACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,YAAY;EACnC,CAAC,CAAC;EACF,IAAI,CAACR,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeS,kBAAkBA,CAACD,EAAE,EAAE;EAC3C,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,IAAImB,EAAE,EAAE,EAAE;IAC1CL,MAAM,EAAE,QAAQ;IAChBP,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;IAAG;EACnD,CAAC,CAAC;EACF,IAAI,CAACI,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}